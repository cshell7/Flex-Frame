/* ----------------------------------------------------------------------------------
			FLEX CONTAINERS
---------------------------------------------------------------------------------- */

/* +============================+
		A. INTRODUCTION/NOTES:
+=============================+ */
/*

For: Notes, Important things, TODO's, stuff, Tigers, Lions, Bears..., etc.

*/

/* +=============================+
		B. TABLE OF CONTENTS:
+=============================+ */
/*

    A. Notes
    B. Table of Contents

	1. Flex Containers
		1.1 Flex Container Attributes



*/


/* +=============================+
		1. Flex Containers
+=============================+ */


[data-flex__container] {

	// Sets it as a flex container
	display: flex;

	//Sets flex defaults
	flex-wrap: wrap;
	align-items: flex-start;
	align-content: flex-start;

	//Helps keeps things play nice
	width: 100%;

	//Allows positioning things relative to the flex container easier later on
	position: relative;
}

//This sets the defaults on the children and keeps things safe and working
[data-flex__container*="true"] > * {
    max-width: 100%;
    flex-grow: 0;
    flex-shrink: 1;
}


/* =-----------------------------=
		1.1 Flex Container Attributes
 */

//Use these helper classes to change the properties of the Flex Container properties and its children.
//Note: These classes are always/only applied to the flex-container but can add css properties to the flex children. Classes that are ".flex--SOMETHING" only affect the flex container. Classes that are ."flex-items--Something" are applied to the flex container but affect its children without changing any properties of the parent.


/*--  Flex Direction --*/

[data-flex__container*="row"] {
	flex-direction: row; //Default
}

[data-flex__container*="column"] {
	flex-direction: column;
}
[data-flex__container*="column"] > * {
	width: 100% !important;
}


/*--  Row Wrap --*/

[data-flex__container*="wrap"] {
	flex-wrap: wrap; //Default
}

[data-flex__container*="nowrap"] {
	flex-wrap: nowrap;
}



/*--  Horizontal Align/Space --*/

//Flex rows will align to the left
[data-flex__container*="left"] {
	justify-content: flex-start; //Default
}

[data-flex__container*="right"] {
	justify-content: flex-end;
}

[data-flex__container*="center"] {
	justify-content: center;
}

//Each flex row puts equal space on the sides of each flex item exept on the sides of the flex container.
[data-flex__container*="space-between-items"] {
	justify-content: space-between;
}

//Each flex row puts equal space on the sides of each flex item.
[data-flex__container*="space-around-items"] {
	justify-content: space-around;
}

//Sets all Flex Items to Automatically grow to fill any empty space on their row
[data-flex__container*="all-items__grow"] > * {
	flex-grow: 1;
}

[data-flex__container*="all-items__nogrow"] > * {
	flex-grow: 0 !important;
}



/*--  Vertical Align/Space --*/

//All of the flex rows are aligned to the top of the flex container
[data-flex__container*="top"] {
	align-content: flex-start; //Default
}

[data-flex__container*="bottom"] {
	align-content: flex-end;
}

[data-flex__container*="middle"] {
	align-content: center;
}

//Flex rows stretch equally in height to fill the height of the flex container
[data-flex__container*="stretch-rows"] {
	align-content: stretch;
}

//Equal space is put between the flex rows (except at the top and bottom of the flex container) to fill the height of the flex container
[data-flex__container*="space-between-rows"] {
	align-content: space-between;
}

//Equal space is put between the flex rows to fill the height of the flex container
[data-flex__container*="space-around-rows"] {
	align-content: space-around;
}

//NOTE: data-flex--row--items are applied to the flex container div

//Aligns all of the items on a flex row to Vbe top aligned to the row
[data-flex__container*="row-items__top"] {
	align-items: flex-start; //Default
}

[data-flex__container*="row-items__bottom"] {
	align-items: flex-end;
}

[data-flex__container*="row-items__middle"] {
	align-items: center;
}

//Stretches all of the flex items on a row to be the same height
[data-flex__container*="row-items__stretch"] {
	align-items: stretch;
}
